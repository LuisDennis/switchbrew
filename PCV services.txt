= bpc =
{| class="wikitable" border="1"
|-
! Cmd || Name
|-
| 0 || ShutdownConsole
|-
| 1 || RebootConsole
|-
| 2 ||
|-
| 3 ||
|-
| 4 ||
|-
| 5 || Returns an event handle.
|-
| 6 ||
|-
| 7 || Returns an event handle.
|-
| 8 ||
|-
| 9 ||
|-
| 10 ||
|}

= bpc:r =

= pcv =
This is "nn::pcv::detail::IPcvService".

{| class="wikitable" border="1"
|-
! Cmd || Name
|-
| 0 || SetPowerEnabled
|-
| 1 || SetClockEnabled
|-
| 2 || SetClockRate
|-
| 3 || GetClockRate
|-
| 4 || GetState
|-
| 5 || GetPossibleClockRates
|-
| 6 || SetMinVClockRate
|-
| 7 || SetReset
|-
| 8 || SetVoltageEnabled
|-
| 9 || GetVoltageEnabled
|-
| 10 || GetVoltageRange
|-
| 11 || SetVoltageValue
|-
| 12 || GetVoltageValue
|-
| 13 || GetTemperatureThresholds
|-
| 14 || SetTemperature
|-
| 15 || Initialize
|-
| 16 || IsInitialized
|-
| 17 || Finalize
|-
| 17 || PowerOn
|-
| 17 || PowerOff
|-
| 17 || ChangeVoltage
|-
| 17 || GetPowerClockInfoEvent
|-
| 17 || GetOscillatorClock
|-
| 17 || GetDvfsTable
|-
| 17 || GetModuleStateTable
|-
| 17 || GetPowerDomainStateTable
|-
| 17 || GetFuseInfo
|-
|}

= pcv:arb =
This is "nn::pcv::IArbitrationManager".

{| class="wikitable" border="1"
|-
! Cmd || Name
|-
| 0 || ReleaseControl
|-
|}

= pcv:imm =
This is "nn::pcv::IImmediateManager".

{| class="wikitable" border="1"
|-
! Cmd || Name
|-
| 0 || SetClockRate
|-
|}

= time:u, time:a, time:s =
This is "nn::timesrv::detail::service::IStaticService".

{| class="wikitable" border="1"
|-
! Cmd || Name || Notes
|-
| 0 || GetStandardUserSystemClock || Returns an [[#ISystemClock]].
|-
| 1 || GetStandardNetworkSystemClock || Returns an [[#ISystemClock]].
|-
| 2 || GetStandardSteadyClock || Returns an [[#ISteadyClock]].
|-
| 3 || GetTimeZoneService || Returns an [[#ITimeZoneService]].
|-
| 4 || GetStandardLocalSystemClock || Returns an [[#ISystemClock]].
|-
| 100 || IsStandardUserSystemClockAutomaticCorrectionEnabled || 
|-
| 101 || SetStandardUserSystemClockAutomaticCorrectionEnabled || 
|-
| 200 || IsStandardNetworkSystemClockAccuracySufficient || 
|-
|}

== ISteadyClock ==
{| class="wikitable" border="1"
|-
! Cmd || Name
|-
| 0 || GetCurrentTimePoint
|-
| 2 || GetTestOffset
|-
| 3 || SetTestOffset
|-
| 100 || GetRtcValue
|-
| 101 || IsRtcResetDetected
|-
| 102 || GetSetupResultValue
|-
| 200 || GetInternalOffset
|-
| 201 || SetInternalOffset
|-
|}

== ISystemClock ==
{| class="wikitable" border="1"
|-
! Cmd || Name || Notes
|-
| 0 || GetCurrentTime || Returns an nn::time::PosixTime (time since epoch).
|-
| 1 || SetCurrentTime || Takes an nn::time::PosixTime.
|-
| 2 || GetSystemClockContext || Returns an 0x20 byte struct (nn::time::SystemClockContext).
|-
| 3 || SetSystemClockContext  || Takes an nn::time::SystemClockContext
|-
|}

== ITimeZoneService ==
{| class="wikitable" border="1"
|-
! Cmd || Name || Notes
|-
| 0 || GetDeviceLocationName || Returns an nn::time::LocationName (0x24 bytes).
|-
| 1 || SetDeviceLocationName || Takes an nn::time::LocationName.
|-
| 2 || GetTotalLocationNameCount || Returns an 0x20 byte struct (nn::time::SystemClockContext).
|-
| 3 || LoadLocationNameList || 
|-
| 4 || LoadTimeZoneRule || 
|-
| 5 || GetTimeZoneRuleVersion ||  
|-
| 100 || ToCalendarTime || 
|-
| 101 || ToCalendarTimeWithMyRule || 
|-
| 200 || ToPosixTime || 
|-
| 201 || ToPosixTimeWithMyRule || 
|-
|}