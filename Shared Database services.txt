= pl:u =
This is "nn::pl::detail::IPlatformServiceManager".

{| class="wikitable" border="1"
|-
! Cmd || Name
|-
| 0 || [[#RequestSharedFontLoad]]
|-
| 1 || [[#GetSharedFontLoadState]]
|-
| 2 || [[#GetSharedFontSize]]
|-
| 3 || [[#GetSharedFontAddress]]
|-
| 4 || [[#GetSharedFontSharedMemoryHandle]]
|-
| 5 || [[#GetSharedFontInOrderOfPriority]]
|-
| 6 || [4.0.0+] GetSharedFontInOrderOfPriorityForSystem
|-
| 100 || [8.0.0+] RequestApplicationFunctionAuthorization
|-
| 101 || [8.0.0+] RequestApplicationFunctionAuthorizationForSystem
|}

== RequestSharedFontLoad ==
Takes a [[#SharedFontType]] (uint32), no output.

== GetSharedFontLoadState ==
Takes a [[#SharedFontType]] (uint32), returns the [[#LoadState]] (uint32).

=== LoadState ===
{| class="wikitable" border="1"
|-
! Value || Description
|-
| 0x00 || Loading
|-
| 0x01 || Loaded
|}

== GetSharedFontSize ==
Takes a [[#SharedFontType]] (uint32), returns the Font Size (uint32).

== GetSharedFontAddress ==
Takes a [[#SharedFontType]] (uint32), returns the offset (uint32) to the Font Address.

== GetSharedFontSharedMemoryHandle ==
No input, returns an output SharedMemory handle.

User-processes map this SharedMemory with size=0x1100000 and permissions=R--.

Font data is TTF, located at the offset returned by [[#GetSharedFontAddress]].

== GetSharedFontInOrderOfPriority ==
Takes an input u64 [[Settings_services#LanguageCode|LanguageCode]] and 3 type-0x6 output buffers, returns an output u8 and u32. The u8 is a bool to specify if the fonts are loaded or not and the u32 is the font count.
The first buffer contains a list of [[#SharedFontType|Shared font types]], the second buffer contains the font offsets and the final buffer contains the font sizes.
The buffers are an array of u32s which specify information about a specific font. Buffer1[n] is related to Buffer2[n] and Buffer3[n].
Example: Font index 0s offset is at Buffer2[0], size is at Buffer3[0].
The fonts are relative to the shared memory created by [[#GetSharedFontSharedMemoryHandle]]

== SharedFontType ==
{| class="wikitable" border="1"
|-
! Value || Description
|-
| 0x00 || Japan, US and Europe (Standard)
|-
| 0x01 || Chinese Simplified
|-
| 0x02 || Extended Chinese Simplified
|-
| 0x03 || Chinese Traditional
|-
| 0x04 || Korean (Hangul)
|-
| 0x05 || Nintendo Extended
|}

* Nintendo Extended: Contains Nintendo-specific characters, including HID buttons, HID controller styles, applet icons, Wii(U) icons,  etc.

= mii:u, mii:e =
This is "nn::mii::detail::IStaticService".

{| class="wikitable" border="1"
|-
! Cmd || Name
|-
| 0 || GetDatabaseService
|}

== IDatabaseService ==
This is "nn::mii::detail::IDatabaseService".

{| class="wikitable" border="1"
|-
! Cmd || Name
|-
| 0 || IsUpdated
|-
| 1 || IsFullDatabase
|-
| 2 || GetCount
|-
| 3 || Get
|-
| 4 || Get1
|-
| 5 || UpdateLatest
|-
| 6 || BuildRandom
|-
| 7 || BuildDefault
|-
| 8 || Get2
|-
| 9 || Get3
|-
| 10 || UpdateLatest1
|-
| 11 || FindIndex
|-
| 12 || Move
|-
| 13 || AddOrReplace
|-
| 14 || Delete
|-
| 15 || DestroyFile
|-
| 16 || DeleteFile
|-
| 17 || Format
|-
| 18 || Import
|-
| 19 || Export
|-
| 20 || IsBrokenDatabaseWithClearFlag
|-
| 21 || GetIndex
|-
| 22 || [5.0.0+] SetInterfaceVersion
|-
| 23 || [5.0.0+] Convert
|-
| 24 || [7.0.0+] ConvertCoreDataToCharInfo
|-
| 25 || [7.0.0+] ConvertCharInfoToCoreData
|}

= miiimg =
This is "nn::mii::detail::IImageDatabaseService".

This was added with [5.0.0+].

{| class="wikitable" border="1"
|-
! Cmd || Name
|-
| 0 || Initialize
|-
| 10 || Reload
|-
| 11 || GetCount
|-
| 12 || IsEmpty
|-
| 13 || IsFull
|-
| 14 || GetAttribute
|-
| 15 || LoadImage
|-
| 16 || AddOrUpdateImage
|-
| 17 || DeleteImages
|-
| 100 || DeleteFile
|-
| 101 || DestroyFile
|-
| 102 || ImportFile
|-
| 103 || ExportFile
|-
| 104 || ForceInitialize
|}

= pdm:ntfy =
This is "nn::pdm::detail::INotifyService".

{| class="wikitable" border="1"
|-
! Cmd || Name
|-
| 0 || [[#NotifyAppletEvent]]
|-
| 2 || [[#NotifyOperationModeChangeEvent]]
|-
| 3 || [[#NotifyPowerStateChangeEvent]]
|-
| 4 || [[#NotifyClearAllEvent]]
|-
| 5 || [[#NotifyEventForDebug]]
|-
| 6 || [4.0.0+] SuspendUserAccountEventService
|-
| 7 || [4.0.0+] ResumeUserAccountEventService
|-
| 8 || [6.0.0+]
|-
| 9 || [8.0.0+]
|}

== NotifyAppletEvent ==
Takes an input u8 [[#AppletEvent]], an u8 [[Applet_Manager_services#AppletId|AppletId]], an u8 [[Filesystem_services#StorageId|StorageId]], an u8 [[#PlayLogPolicy]], an u32 '''event_x8''', and an u64 '''titleID'''. Returns no output.

When [[#PlayLogPolicy]] is 2 ("None") this will immediately return 0.

Logs a new [[#PlayEvent]] with the following data:
* Clears the 0x10-bytes at +0x10.
* u8 +0xF = [[#AppletEvent]].
* Sets the 3 timestamps.
* Converts '''titleID''' and writes it to +0x0.
* u32 +0x8 = '''event_x8'''.
* u8 +0xC = [[Applet_Manager_services#AppletId|AppletId]], u8 +0xD = [[Filesystem_services#StorageId|StorageId]], and u8 +0xE = [[#PlayLogPolicy]].

After the initial logging, additional code runs with some of the above input params.

== NotifyOperationModeChangeEvent ==
Takes an input u8 '''inval''', no output.

Logs a new [[#PlayEvent]] with the following data: clears the 0x20-bytes at +0x0, u8 +0x1C = 0x3, u8 +0x0 = '''inval''', and sets the 3 timestamps.

== NotifyPowerStateChangeEvent ==
Takes an input u8 '''inval''', no output.

Logs a new [[#PlayEvent]] with the following data: clears the 0x20-bytes at +0x0, u8 +0x1C = 0x2, u8 +0x0 = '''inval''', and sets the 3 timestamps.

After the initial logging, additional code runs which uses '''inval'''.

== NotifyClearAllEvent ==
No input/output.

== NotifyEventForDebug ==
Takes an input type-0x5 buffer containing an array of [[#PlayEvent]], no output.

Gets the [[System_Settings|system-setting]] <code>pdm!is_production</code>, the size must be 1 and the value must be 0, otherwise an error is returned.

Each [[#PlayEvent]] entry is validated, throwing an error on failure. After an entry is successfully validated, it is written to the log.

== Cmd8 ==
Takes an input u8 [[#AppletEvent]], an u8 '''event_x9''', an u8 [[Applet_Manager_services#AppletId|AppletId]], an u8 [[Filesystem_services#StorageId|StorageId]], an u8 [[#PlayLogPolicy]], and an u64 '''titleID'''. Returns no output.

This is similar to [[#NotifyAppletEvent]].

When [[#PlayLogPolicy]] is 2 ("None") this will immediately return 0.

Logs a new [[#PlayEvent]] with the following data:
* Clears the 0x20-bytes at +0x0.
* u8 +0xF = [[#AppletEvent]].
* Sets the 3 timestamps.
* Converts '''titleID''' and writes it to +0x0.
* u8 +0x9 = '''event_x9'''.
* u8 +0x8 = 1.
* u8 +0xC = [[Applet_Manager_services#AppletId|AppletId]], u8 +0xD = [[Filesystem_services#StorageId|StorageId]], and u8 +0xE = [[#PlayLogPolicy]].

After the initial logging, additional code runs with some of the above input params. This is handled the same as [[#NotifyAppletEvent]], except that the value passed for '''event_x8''' is value 0 here.

== Cmd9 ==
Takes an input u8 [[#AppletEvent]], an u8 [[Applet_Manager_services#AppletId|AppletId]], an u8 [[Filesystem_services#StorageId|StorageId]], an 0x20-byte struct, an u8 bool flag, an u8 [[#PlayLogPolicy]], an u32 '''event_x8''', and an u64 '''titleID'''. Returns no output.

This is identical to [[#NotifyAppletEvent]] except for the additional struct/flag params.

After the initial logging, additional code runs with some of the above input params. This is handled the same as [[#NotifyAppletEvent]], except that when the u8 bool flag is set the input struct is used with this.

= pdm:qry =
This is "nn::pdm::detail::IQueryService".

{| class="wikitable" border="1"
|-
! Cmd || Name
|-
| 0 || [[#QueryApplicationEvent]]
|-
| [1.0.0-6.2.0] 1 || QueryPlayStatistics
|-
| [1.0.0-6.2.0] 2 || QueryPlayStatisticsByUserAccountId
|-
| [1.0.0-6.2.0] 3 || QueryPlayStatisticsByNetworkServiceAccountId
|-
| 4 || [[#QueryPlayStatisticsByApplicationId]]
|-
| 5 || [[#QueryPlayStatisticsByApplicationIdAndUserAccountId]]
|-
| [1.0.0-6.2.0] 6 || QueryPlayStatisticsByApplicationIdAndNetworkServiceAccountId
|-
| 7 || [[#QueryLastPlayTime]]
|-
| 8 || [[#QueryPlayEvent]]
|-
| 9 || [[#GetAvailablePlayEventRange]]
|-
| 10 || [[#QueryAccountEvent]]
|-
| 11 || [4.0.0+] [[#QueryAccountPlayEvent]]
|-
| 12 || [4.0.0+] [[#GetAvailableAccountPlayEventRange]]
|-
| 13 || [5.0.0+] [[#QueryApplicationPlayStatisticsForSystem]]
|-
| 14 || [6.0.0+]
|-
| 15 || [6.0.0+]
|-
| 16 || [6.0.0+]
|}

== QueryApplicationEvent ==
Takes an input u32 entryindex, a type-0x6 output buffer containing an array of [[#ApplicationEvent]], and returns an output s32 for actual total output entries.

== QueryPlayStatisticsByApplicationId ==
Takes an input u64 titleID and returns an output [[#PlayStatistics]].

== QueryPlayStatisticsByApplicationIdAndUserAccountId ==
Takes an input u64 titleID, an input u128 userID, and returns an output [[#PlayStatistics]].

== QueryLastPlayTime ==
Takes a type-0x6 output buffer containing an array of [[#LastPlayTime]], and a type-0x5 input buffer containing an array of u64 titleIDs. Returns an output s32 for actual total output entries.

== QueryPlayEvent ==
Takes an input u32 entryindex, a type-0x6 output buffer containing an array of [[#PlayEvent]], and returns an output u32 for actual total output entries.

== GetAvailablePlayEventRange ==
No input, returns 3 output u32s: total_entries, start_entryindex, and end_entryindex.

== QueryAccountEvent ==
Takes an input u32 entryindex, a type-0x6 output buffer containing an array of [[#AccountEvent]], and returns an output s32 for actual total output entries.

== QueryAccountPlayEvent ==
Takes an input u32 entryoffset, an input u128 userID, a type-0x6 output buffer containing an array of [[#AccountPlayEvent]], and returns an output u32 for actual total output entries.

== GetAvailableAccountPlayEventRange ==
Takes an input u128 userID and returns 3 output u32s: total_entries, start_entryindex, and end_entryindex.

== QueryApplicationPlayStatisticsForSystem ==
Takes a type-0x6 output buffer containing an array of [[#ApplicationPlayStatistics]] and a type-0x5 input buffer containing an array of u64 titleIDs. Returns an output s32 for actual total output entries.

The number of entries in each array is the same.

== Cmd14 ==
Takes an input u128 userID, a type-0x6 output buffer containing an array of u64 titleIDs, and returns an output u32 for actual total output entries.

Returns a list of titles played by the specified user.

== Cmd15 ==
No input, returns an output Event handle with autoclear=false.

This is signaled when logging a new [[#PlayEvent]] which would be available via [[#QueryAccountEvent]], where [[#PlayEvent]] +0x18 is 0.

== Cmd16 ==
Takes a u128 userID, a type-0x6 output buffer containing an array of [[#ApplicationPlayStatistics]] and a type-0x5 input buffer containing an array of u64 titleIDs. Returns an output s32 for actual total output entries.

Same as [[#QueryApplicationPlayStatisticsForSystem]] except this gets playstats specific to userIDs.

= avm =
This is "nn::avm::srv::IAvmService".

This was added with [6.0.0+].

{| class="wikitable" border="1"
|-
! Cmd || Name
|-
| 100 || 
|-
| 101 || 
|-
| 102 || 
|-
| 103 || No input, returns an [[#IVersionListImporter]].
|-
| 200 || 
|-
| 202 || 
|-
| 1000 || 
|-
| 1001 || 
|-
| 1002 || 
|}

== IVersionListImporter ==
This is "nn::avm::srv::IVersionListImporter".

This was added with [6.0.0+].

{| class="wikitable" border="1"
|-
! Cmd || Name
|-
| 0 || 
|-
| 1 || 
|-
| 2 || 
|}

= ApplicationEvent =
{| class="wikitable" border="1"
|-
! Offset
! Size
! Description
|-
| 0x0 || 0x8 || titleID
|-
| 0x8 || 0x4 || entryindex
|-
| 0xC || 0x4 || timestamp0
|-
| 0x10 || 0x4 || timestamp1
|-
| 0x14 || 0x1 || [[#PlayEvent]] +0xF
|-
| 0x15 || 0x3 || Padding
|}

This is a 0x18-byte struct.

Timestamp format, converted from PosixTime: total minutes since epoch UTC 1999/12/31 00:00.

= PlayStatistics =
{| class="wikitable" border="1"
|-
! Offset
! Size
! Description
|-
| 0x0 || 0x8 || titleID
|-
| 0x8 || 0x4 || First entryindex
|-
| 0xC || 0x4 || First timestamp0. Same as the first [[#ApplicationEvent]] timestamp.
|-
| 0x10 || 0x4 || First timestamp1. Same as the second [[#ApplicationEvent]] timestamp.
|-
| 0x14 || 0x4 || Last entryindex
|-
| 0x18 || 0x4 || Last timestamp0. Same as the first [[#ApplicationEvent]] timestamp.
|-
| 0x1C || 0x4 || Last timestamp1. Same as the second [[#ApplicationEvent]] timestamp.
|-
| 0x20 || 0x4 || Total play-time in minutes.
|-
| 0x24 || 0x4 || Total times the application title was launched.
|}

This is a 0x28-byte struct.

= LastPlayTime =
{| class="wikitable" border="1"
|-
! Offset
! Size
! Description
|-
| 0x0 || 0x8 || titleID
|-
| 0x8 || 0x4 || Same as the first [[#ApplicationEvent]] timestamp.
|-
| 0xC || 0x4 || Same as the second [[#ApplicationEvent]] timestamp.
|-
| 0x10 || 0x4 || Total minutes since the title was last played.
|-
| 0x14 || 0x1 || Flag indicating whether the above field is set.
|-
| 0x15 || 0x3 || Padding
|}

This is a 0x18-byte struct. This contains data from the last time the title was played.

= PlayEventType =
{| class="wikitable" border="1"
|-
! Value
! Description
|-
| 0 || Applet
|-
| 1 || Account
|-
| 2 || PowerStateChange
|-
| 3 || OperationModeChange
|}

This is an enum for [[#PlayEvent]] +0x1C, which indicates the type of [[#PlayEvent]].

= AppletEvent =
{| class="wikitable" border="1"
|-
! Value
! Description
|-
| 0 || "launch"
|-
| 1 || "exit"
|-
| 2 || "in_focus"
|-
| 3 || "out_of_focus"
|-
| 4 || "out_of_focus"
|-
| 5 || "exit"
|-
| 6 || "exit"
|}

This is an enum for [[#PlayEvent]] +0xF with [[#PlayEventType]] = Applet, this indicates the type of the Applet event.

= PlayLogPolicy =
{| class="wikitable" border="1"
|-
! Value
! Meaning
! Description
|-
| 0 || All || [[#QueryApplicationEvent]] and [[#QueryLastPlayTime]] will only return the entry when PlayLogPolicy matches this value.
|-
| 1 || LogOnly || The above commands will filter out the entry with this.
|-
| 2 || None || pdm:ntfy [[#NotifyAppletEvent]], [[#Cmd8]], and [[#Cmd9]] will immediately return 0 when the input param matches this value.
|}

This is an enum for [[#PlayEvent]] +0xE with [[#PlayEventType]] = Applet. This is set via the above commands, which uses this as an input param.

= PlayEvent =
{| class="wikitable" border="1"
|-
! Offset
! Size
! Description
|-
| 0x1C || 0x1 || [[#PlayEventType]]
|-
| 0x1D || 0x3 || Padding
|-
| 0x20 || 0x8 || PosixTime timestamp from [[PCV_services|StandardUserSystemClock]].
|-
| 0x28 || 0x8 || PosixTime timestamp from [[PCV_services|StandardNetworkSystemClock]].
|-
| 0x30 || 0x8 || Timestamp in seconds derived from [[PCV_services|StandardSteadyClock]].
|}

This is a 0x38-byte struct.

This is the raw entry struct directly read from FS, without any entry filtering. The other structs are extracted+converted from this one, with filtering.

Filtering:
* [[#QueryApplicationEvent]], [[#QueryLastPlayTime]], and [[#QueryApplicationPlayStatisticsForSystem]]: PlayEvent +0x1C must be 0, +0xC must be 1, and +0xE must be 0.
* [[#QueryPlayStatisticsByApplicationId]]: PlayEvent +0x1C must be 0, +0xC must be 1, and the titleID must match.
* [[#QueryAccountEvent]]: PlayEvent +0x1C must be 1 and PlayEvent +0x18 must be <=1.
* [[#QueryApplicationPlayStatisticsForSystem]]: In addition to the above, this also handles [[#PlayEventType]] PowerStateChange, where PlayEvent +0x0 is value 0 or 1.

The structure of the first 0x1C-bytes are determined by [[#PlayEventType]]. For titleIDs/userIDs, the low/high u32 in each u64 is swapped.

Applet:

{| class="wikitable" border="1"
|-
! Offset
! Size
! Description
|-
| 0x0 || 0x8 || titleID
|-
| 0x8 || 0x4 || When set to u8 0x1 by pdm:ntfy [[#Cmd8]], this indicates that +0x9 is set.
|-
| 0x9 || 0x1 || See above.
|-
| 0xC || 0x1 || [[Applet_Manager_services#AppletId|AppletId]]
|-
| 0xD || 0x1 || [[Filesystem_services#StorageId|StorageId]]
|-
| 0xE || 0x1 || [[#PlayLogPolicy]]
|-
| 0xF || 0x1 || [[#AppletEvent]]
|-
| 0x10 || 0xC || Unused
|}

Account:

{| class="wikitable" border="1"
|-
! Offset
! Size
! Description
|-
| 0x0 || 0x10 || userID
|-
| 0x10 || 0x8 || titleID, when u8 +0x18 = 2.
|-
| 0x18 || 0x1 || Type. 0-1 to be listed by [[#QueryAccountEvent]], or 2 to include the above titleID.
|-
| 0x19 || 0x3 || Padding
|}

PlayEventType PowerStateChange/OperationModeChange: u8 +0x0 is the input value from [[#NotifyOperationModeChangeEvent]]/[[#NotifyPowerStateChangeEvent]], the rest is unused.

= AccountEvent =
{| class="wikitable" border="1"
|-
! Offset
! Size
! Description
|-
| 0x0 || 0x10 || userID
|-
| 0x10 || 0x4 || entryindex
|-
| 0x14 || 0x4 || Padding
|-
| 0x18 || 0x8 || [[#PlayEvent]] +0x20
|-
| 0x20 || 0x8 || [[#PlayEvent]] +0x28
|-
| 0x28 || 0x8 || [[#PlayEvent]] +0x30
|-
| 0x30 || 0x1 || [[#PlayEvent]] +0x18
|-
| 0x31 || 0x7 || Padding
|}

This is a 0x38-byte struct.

= AccountPlayEvent =
{| class="wikitable" border="1"
|-
! Offset
! Size
! Description
|-
| 0x0 || 0x4 || ?
|-
| 0x4 || 0x8 || titleID, with the u32 low/high words swapped.
|-
| 0xC || 0xC || ?
|-
| 0x18 || 0x8 || POSIX timestamp
|-
| 0x20 || 0x8 || POSIX timestamp
|}

This is a 0x28-byte struct.

This is the raw entry struct directly read from FS, without any entry filtering. This is separate from [[#PlayEvent]].

= ApplicationPlayStatistics =
{| class="wikitable" border="1"
|-
! Offset
! Size
! Description
|-
| 0x0 || 0x8 || titleID
|-
| 0x8 || 0x8 || Total play-time in nanoseconds.
|-
| 0x10 || 0x8 || Total times the application title was launched.
|}

This is "nn::pdm::ApplicationPlayStatistics".

This is a 0x18-byte struct.

[[Category:Services]]